1. What is HTTP? What are the different HTTP request methods and how do they differ?
HTTP (HyperText Transfer Protocol) is the protocol used for transferring data over the web. It establishes how browsers and servers communicate with each other through request and response cycles. There are several types of HTTP request methods, each with a different purpose. The most common ones are GET, which retrieves data from the server, and POST, used to send data to the server, often when submitting forms. PUT and PATCH are used for updating resources, though PUT replaces an entire resource, while PATCH modifies part of it. DELETE is used to remove resources from the server. These methods allow developers to interact with web resources in various ways depending on the action required.
2. What is an API? What is JSON?
An API (Application Programming Interface) is a set of rules that allows different software components to communicate with each other. APIs are essential for enabling the exchange of data between different systems. One common data format for these exchanges is JSON (JavaScript Object Notation), a lightweight format that's easy for both humans and machines to read and write. It is widely used in web development to send and receive data between a client and server.
3. What is AJAX? What is meant by asynchronous code?
AJAX (Asynchronous JavaScript and XML) is a technique that allows web pages to make requests to the server asynchronously, meaning the page doesn't need to reload while new data is fetched from the server. This makes web applications more responsive and user-friendly. The term asynchronous refers to code that doesn't run in a linear, blocking fashion. Instead, asynchronous code allows other operations to continue running while waiting for a task, such as data retrieval, to complete.
4. What is REST and what are resources? If my application had a concept called posts and
was designed in a RESTful way, what would the URI and HTTP request method be to:
retrieve multiple posts, retrieve a single post, save a post, update a post.
REST (Representational State Transfer) is a style used for designing networked applications. In REST, resources such as "posts" or "users" are the key components, each represented by a URI (Uniform Resource Identifier). RESTful services use HTTP request methods to interact with these resources. For example, to retrieve multiple posts, a GET request would be made to the /posts URI. To retrieve a single post, a GET request would be made to /posts/{id}, where {id} represents the unique identifier of the post. A POST request to /posts would save a new post, while a PUT or PATCH request to /posts/{id} would update an existing one.
5. Define hoisting and closures in JS.
Hoisting in JavaScript is the process where variable and function declarations are moved to the top of their containing scope during the compile phase, before the code is executed. This means that you can use variables and functions before they are actually declared in the code. However, only the declarations are hoisted, not the initializations. For example, a function can be called before it's declared, but a variable's value will remain `undefined` if it's used before initialization.
Closures in JavaScript occur when a function remembers and has access to variables from its outer scope, even after that outer function has finished executing. This is possible because functions in JavaScript "close over" the variables they reference, allowing them to retain access to those variables later on. Closures often create private variables or maintain state across multiple function calls.
